worker_processes auto;
daemon off;
pid /nginx/nginx.pid;

events {
    worker_connections  1024;
    use epoll;
}

http {
    client_max_body_size 2048M;
    include gzip.conf;
    include mime.types;
    server_tokens off;

    access_log /nginx/logs/access.log combined;
    client_body_temp_path /nginx/tmp/client_body;
    error_log /nginx/logs/error.log error;
    fastcgi_temp_path /nginx/tmp/fastcgi;
    proxy_temp_path /nginx/tmp/proxy;
    uwsgi_temp_path /nginx/tmp/uwsgi;
        
    fastcgi_cache_path /tmp/nginx_cache levels=1:2 keys_zone=ELZIRE:100m inactive=1m;
    fastcgi_cache_key "$request_method$host$request_uri";

    server {
        listen 8443 ssl http2;
        server_name _;
        index index.html index.htm;

        add_header Referrer-policy "same-origin";
        add_header X-Content-Type-Options "nosniff";
        add_header Content-Security-Policy "frame-ancestors 'self'";

        # https://mozilla.github.io/server-side-tls/ssl-config-generator/
        ssl_session_cache shared:SSL:50m;
        ssl_session_tickets off;
        ssl_session_timeout 1d;
        ssl_protocols TLSv1.2;
        ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
        ssl_prefer_server_ciphers on;
        ssl_dhparam /certs/elzire.fr/dhparams.pem;
        ssl_certificate /certs/elzire.fr/elzire.fr.cer;
        ssl_certificate_key /certs/elzire.fr/elzire.fr.key;

        root /www/web/;

        location / {
            try_files $uri /app.php$is_args$args;
        }

        location ~ app\.php(/|$) {
            fastcgi_pass 127.0.0.1:9000;
            fastcgi_split_path_info ^(.+\.php)(/.*)$;
            include fastcgi.conf;
            fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
            fastcgi_param DOCUMENT_ROOT $realpath_root;
            fastcgi_cache ELZIRE;
            fastcgi_cache_valid 200 60m;
            # Prevents URIs that include the front controller. This will 404:
            # http://domain.tld/app.php/some-path
            # Remove the internal directive to allow URIs like this
            internal;
        }

        location ~ (app_dev|config)\.php(/|$) {
            fastcgi_pass 127.0.0.1:9000;
            fastcgi_split_path_info ^(.+\.php)(/.*)$;
            include fastcgi.conf;
            # When you are using symlinks to link the document root to the
            # current version of your application, you should pass the real
            # application path instead of the path to the symlink to PHP
            # FPM.
            # Otherwise, PHP's OPcache may not properly detect changes to
            # your PHP files (see https://github.com/zendtech/ZendOptimizerPlus/issues/126
            # for more information).
            fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
            fastcgi_param DOCUMENT_ROOT $realpath_root;
        }

        location ~ \.php$ {
            return 404;
        }

        location ~ \.(png|jpg|jpeg|css|js)$ {
            expires 1d;
            #expires -1;
            try_files $uri /app.php$is_args$args;
            add_header Cache-Control "public";
        }
    }

    server {
        listen 8080;
        return 301 https://$host$request_uri;
    }
}
